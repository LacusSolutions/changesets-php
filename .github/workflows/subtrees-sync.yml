name: Sync Packages to Individual Repositories

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allow manual triggering

jobs:
  discover-packages:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.packages.outputs.matrix }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Discover packages
        id: packages
        run: |
          # Automatically discover all packages in the packages/ directory
          echo "🔍 Discovering packages in packages/ directory..."
          PACKAGE_NAMES=()
          for package_dir in packages/*/; do
            if [ -d "$package_dir" ]; then
              package_name=$(basename "$package_dir")
              PACKAGE_NAMES+=("$package_name")
              echo "Found package: $package_name"
            fi
          done

          echo "📦 Total packages discovered: ${#PACKAGE_NAMES[@]}"

          # Build package configurations for all packages
          ALL_PACKAGES=()
          for package_name in "${PACKAGE_NAMES[@]}"; do
            repo_url="https://github.com/LacusSolutions/changesets-php_$package_name.git"
            package_path="packages/$package_name"

            # Create package configuration
            package_config="{\"name\":\"$package_name\",\"path\":\"$package_path\",\"repo\":\"$repo_url\",\"branch\":\"main\"}"
            ALL_PACKAGES+=("$package_config")
            echo "📦 Package $package_name will be synced"
          done

          # Output all packages as matrix
          if [ ${#ALL_PACKAGES[@]} -eq 0 ]; then
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
            echo "No packages found"
          else
            # Convert array to JSON matrix format
            printf -v packages_json '%s,' "${ALL_PACKAGES[@]}"
            packages_json="[${packages_json%,}]"
            echo "matrix={\"include\":$packages_json}" >> $GITHUB_OUTPUT
            echo "All packages: ${ALL_PACKAGES[*]}"
          fi

  sync-package:
    needs: discover-packages
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.discover-packages.outputs.matrix) }}
      fail-fast: false # Continue syncing other packages even if one fails
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Generate GitHub App Token
        id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.SUBTREES_SYNC_ID }}
          private_key: ${{ secrets.SUBTREES_SYNC_PRIVATE_KEY }}

      - name: Configure Git with App Token
        run: |
          # Configure git to use the app token for authentication
          git config --global url."https://x-access-token:${{ steps.generate_token.outputs.token }}@github.com/".insteadOf "https://github.com/"

          # Debug: Test the token and check app installation
          echo "🔍 Testing GitHub App token..."
          echo "Token (first 10 chars): ${GITHUB_TOKEN:0:10}..."

          # Test API access
          echo "📡 Testing API access..."
          curl -s -H "Authorization: token ${{ steps.generate_token.outputs.token }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/user | jq '.login' || echo "❌ API access failed"

          # Check app installation on target repository
          echo "🔍 Checking app installation on target repository: ${{ matrix.repo }}"
          curl -s -H "Authorization: token ${{ steps.generate_token.outputs.token }}" \
               -H "Accept: application/vnd.github.v3+json" \
               "https://api.github.com/repos/LacusSolutions/changesets-php_${{ matrix.name }}" | jq '.name, .permissions' || echo "❌ Repository access failed"

      - name: Sync ${{ matrix.name }} package
        run: |
          echo "🔄 Syncing ${{ matrix.name }} package..."
          echo "📦 Package: ${{ matrix.name }}"
          echo "📁 Path: ${{ matrix.path }}"
          echo "🔗 Repository: ${{ matrix.repo }}"
          echo "🌿 Branch: ${{ matrix.branch }}"

          # Push changes to the subtree (safe to run even if no changes)
          echo "⬆️ Pushing changes to ${{ matrix.name }}..."
          if git subtree push --prefix="${{ matrix.path }}" "${{ matrix.repo }}" "${{ matrix.branch }}"; then
            echo "✅ Successfully synced ${{ matrix.name }}"
          else
            echo "❌ Failed to sync ${{ matrix.name }}"
            exit 1
          fi

  sync-summary:
    needs: [discover-packages, sync-package]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Sync completed
        run: |
          echo "## 📊 Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All packages have been processed." >> $GITHUB_STEP_SUMMARY
          echo "Check individual job results for detailed status." >> $GITHUB_STEP_SUMMARY
